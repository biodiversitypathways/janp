---
title: "Report on the use of passive acoustic monitoring in Jasper National Park"
format:
  html:
    grid:
      margin-width: 300px
navbar: right
theme: cosmo
date: "`r format(Sys.time(), '%d %B, %Y')`"
author: 
  - name: "Alex MacPhail"
    affiliation: "Biodiversity Pathways Ltd."
  - name: "Brenda Shepherd"
    affiliation: "Parks Canada"
editor: visual
bibliography: references.bib
nocite: '@*'
toc: true
toc-depth: 3
toc-expand: true
toc-location: left
styles: styles.css
github: https://github.com/biodiversitypathways/janp
---

![](janp.png){style="float:left`;" fig-alt="Photo of Jasper" fig-align="center"}

```{r}
#| label: Load packages and authenticate to WildTrax
#| include: false
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(tidyverse)
library(leaflet)
library(wildrtrax)
library(sf)
library(ggridges)
library(scales)
library(kableExtra)
library(plotly)
library(DT)
library(lubridate)
library(spdep)

wt_auth()

load('janp.RData')
#save.image('janp.RData')
```

```{r}
#| label: Download data from WildTrax
#| warning: false
#| message: false
#| echo: false
#| eval: false
#| include: true

janp_projects <- wildrtrax::wt_get_download_summary(sensor = 'ARU') |>
  filter(grepl('Jasper', project)) |>
  select(project_id) |>
  pull()

janp_main <-
  map_dfr(
    .x = janp_projects,
    .f = ~ wildrtrax::wt_download_report(
      project_id = .x,
      sensor_id = "ARU",
      weather_cols = T,
      reports = "main"
    )
  )

janp_main <- bind_rows(old_standardized, janp_main)

```

# Abstract

::: {.callout-note collapse="true" style="background-color: #f4f4f4; padding: 20px;"}
This report is dynamically generated, meaning its results may evolve with the addition of new data or further analyses. For the most recent updates, refer to the publication date and feel free to reach out to the authors.
:::

# Land Acknowledgement

# Introduction

# Methods

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| include: true
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Locations from Jasper National Park ARU Monitoring Program
#| label: fig-aru-monitoring-locations


janp_locs <- janp_main |>
  mutate(year = lubridate::year(recording_date_time)) |>
  select(location, latitude, longitude, year) |>
  drop_na(latitude) |>
  distinct() |>
  mutate(type = case_when(grepl('BAT',location) ~ "Bat", TRUE ~ "Bird")) |>
  sf::st_as_sf(coords = c("longitude","latitude"), crs = 4326)

locs_summary <- janp_locs |>
  st_drop_geometry() |>
  group_by(location, year) |>
  mutate(value = row_number()) |>
  ungroup() |>
  arrange(year) |>
  pivot_wider(names_from = year, values_from = value, values_fill = 0) |>
  rename('Location' = location)

janp_shp <- read_sf('assets/National_Parks_and_National_Park_Reserves_of_Canada_Legislative_Boundaries.shp') |>
  filter(grepl('JASPER',adminAreaN))
janp_shp <- st_transform(janp_shp, st_crs(janp_locs)) |> st_make_valid()

leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addPolygons(
    data = janp_shp,
    fillColor = "#29ABE2",
    color = "black",
    weight = 1,
    fillOpacity = 0.4,
    popup = ~paste("Park:", adminAreaN)
  ) %>%
  addCircleMarkers(
    data = janp_locs,
    popup = ~paste("Location:", janp_locs$location, "<br>"),
    radius = 5  # Adjust marker size
  ) %>%
  addMeasure(primaryLengthUnit = "meters", primaryAreaUnit = "sqmeters") %>%
  addMiniMap(position = "bottomleft")
  


```

To analyze trends in bird abundance in Jasper National Park from 2007–2024, we utilized bird point count data to assess changes in abundance at the species and guild levels. Observations were grouped by transects within the montane/sub-alpine and alpine ecoregions to address spatial clustering and ensure results aligned with Ecological Integrity reporting requirements. Point count data were first filtered to include only observations from 2007–2024. Each observation was classified by species and functional guild based on established ecological trait databases \[FIG\]. The dataset was split by ecoregion (montane/sub-alpine and alpine) using georeferenced transect locations. A variable representing time-to-first-detection (TTFD) was included when available, to control for potential biases in detectability. Trends in abundance were assessed separately for species and guilds using generalized linear mixed-effects models (GLMMs) implemented in the lme4 package (Bates et al., 2015) in R (R Core Team, 2023). Count data were modeled using a Poisson distribution or a negative binomial distribution where overdispersion was evident. Models included fixed effects for year, ecoregion, and their interaction, while accounting for spatial clustering using random intercepts for transects. Separate models were fitted for montane/sub-alpine and alpine ecoregions to facilitate region-specific comparisons. Declines in abundance were calculated as the annual percent change (APC) using the equation. Temporal trends were visualized using the `ggplot2` package (Wickham, 2016), with separate panels for species and guilds.

## Location correlation

```{r}

janp_main |>
  select(location, latitude, longitude) |>
  distinct() |>
  drop_na(latitude) |>
  wt_location_distances() |>
  filter(distance < 300) |>
  arrange(distance) |>
  print(n = 20)

```

```{r}

luh <- janp_main |>
  select(location, latitude, longitude) |>
  distinct() |>
  drop_na(latitude)

ll <- luh |>
  sf::st_as_sf(coords = c("longitude","latitude"), crs = 4326) %>%
  knearneigh(k=1)

nb <- knn2nb(ll)

nb
```

# Results

## Trends in abundance for montane / sub-alpine ecoregion

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-verified
#| tbl-cap: Proportion of tags verified

all_tags <- janp_main |>
  tally() |>
  pull()

verified_tags <- janp_main |>
  group_by(tag_is_verified) |>
  tally() |>
  ungroup() |>
  mutate(Proportion = round(n / all_tags,4)*100) |>
  rename("Count" = n) |>
  rename("Tag is verified" = tag_is_verified)

kable(verified_tags)

```

```{r}
#| warning: false
#| echo: false
#| message: false
#| eval: true
#| include: true
#| label: tbl-tmtt
#| tbl-cap: TMTT tags

tmtt_tags <- janp_main |>
  select(location, recording_date_time, species_code, individual_count) |>
  distinct() |>
  filter(individual_count == "TMTT")

kable(head(tmtt_tags))

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 10
#| fig-height: 10
#| fig-cap: Seasonal detection activity of most commonly detected forest species
#| label: fig-spp-activity
#| cap-location: margin

guilds <- read_csv("jasper_guilds.csv")

guild_activity <- janp_main |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T) |>
  select(location, recording_date_time, species_common_name, species_code, individual_count) |>
  mutate(julian = lubridate::yday(recording_date_time),
         month= month(recording_date_time),
         year = factor(year(recording_date_time))) |>
  inner_join(guilds, by = "species_code") |>
  group_by(species_code) |>
  add_tally() |>
  ungroup() |>
  rename("Nesting habitat" = habitat_guild) |>
  group_by(julian, species_code) |>
  add_tally() |>
  ungroup() |>
  filter(!n < 3) |>
  arrange(species_code) |>
  mutate(recording_date_time = as.POSIXct(recording_date_time)) |>
  mutate(species_code = factor(species_code, levels = sort(unique(species_code))))

guild_activity |>
  ggplot(aes(x = julian, y = `Nesting habitat`, fill = `Nesting habitat`)) + 
  geom_density_ridges(alpha = 0.7, scale = 1) +
  scale_fill_viridis_d(option = "cividis") +
  theme_bw() +
  xlab("Day of Year") + 
  ylab("Species")
```

```{r}
guild_activity |>
  rename(`Dietary guild` = "dietary_guild") |>
  ggplot(aes(x = julian, y = `Dietary guild`, fill = `Dietary guild`)) + 
  geom_density_ridges(alpha = 0.7, scale = 2.5) +
  scale_fill_viridis_d(option = "cividis") +
  theme_bw() +
  xlab("Day of Year") + 
  ylab("Species")

```

```{r}
#| warning: false
#| echo: false
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-width: 8
#| fig-height: 8
#| fig-cap: Count abundance of medium-distance migrants by year
#| label: relative-abundance-auriol
#| cap-location: margin

# Medium-distance migrants
mdm <- c("AMRO","CHSP","DEJU","GCKI","HETH","FOSP","RCKI","SWTH","VATH","WCSP","WTSP","GCSP","YRWA")

tot_a <- janp_main |>
  wt_tidy_species(remove = c("mammal","amphibian","abiotic","insect","unknown"), zerofill = T)

prop_tidy <- nrow(tot_a) / nrow(janp_main)

tot_a_mdm <- tot_a |>
  filter(species_code %in% mdm)

prop_a <- nrow(tot_a_mdm) / nrow(tot_a)

plot_mdm <- 
  tot_a_mdm |>
  mutate(year = year(recording_date_time)) |>
  wt_replace_tmtt(calc = "round") |>
  select(location, year, species_code, individual_order, individual_count) |>
  group_by(location, year, species_code) |>
  summarise(individual_order = mean(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0))

plot_mdm |>
  ggplot(aes(x = year, y = individual_order, colour = species_code)) +
  geom_point() + 
  geom_smooth(aes(x = as.numeric(as.character(year))), method = "lm") +  # Use numeric conversion for geom_smooth
  scale_colour_viridis_d(option = "cividis", alpha = 0.7) + # Keep years as factors and format without spaces
  theme_bw() +
  facet_wrap(~species_code) +
  labs(x = "Year", y = "Mean number of individuals")

```

```{r}
#| warning: false
#| echo: true
#| eval: true
#| message: false
#| include: true
#| results: hide
#| fig-align: center
#| fig-cap: Annual count of medium-distance migrants 
#| label: fig-annual-auriol-count
#| cap-location: bottom
#| code-fold: true

count_annual_mdm <- tot_a_mdm |>
  mutate(year = year(recording_date_time)) |>
  wt_replace_tmtt(calc = "round") |>
  select(location, year, species_code, individual_order, individual_count) |>
  group_by(location, year, species_code) |>
  summarise(individual_order = max(individual_order)) |>
  ungroup() |>
  mutate(year = round(year,0)) |>
  group_by(year) |>
  summarise(sum_year = sum(individual_order)) |>
  ungroup()

linear_model_count_annual_mdm <- lm(sum_year ~ year, data = count_annual_mdm)
slope_count_annual_mdm <- coef(linear_model_count_annual_mdm)[2]
p_value_count_annual_mdm <- summary(linear_model_count_annual_mdm)$coefficients[2, 4]

ggplot(count_annual_mdm, aes(x = year, y = sum_year)) +
  geom_smooth(method = "lm") +
  geom_point(size = 2, color = "darkblue") +
  scale_fill_viridis_d(option = "mako") +
  labs(x = "Year", y = "Count of medium-distance migrants", fill = "Year") +
  scale_x_continuous(breaks = unique(count_annual_mdm$year)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  annotate("text", x = 2021, y = max(count_annual_mdm$sum_year), 
           label = paste("Slope: ", round(slope_count_annual_mdm, 2), "\nP-value: ", round(p_value_count_annual_mdm, 4)), 
           size = 3, hjust = 0, vjust = 1)

```

# Discussion
